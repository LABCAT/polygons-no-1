{"version":3,"sources":["js/helpers/Globals.js","js/functions/PlayIcon.js","js/functions/ShuffleArray.js","js/functions/TetradicColourCalculator.js","js/classes/Polygon.js","audio/polygons-no-1.ogg","audio/polygons-no-1.mid","js/P5SketchWithAudio.js","js/App.js","index.js"],"names":["window","p5","PlayIcon","id","className","xmlns","height","viewBox","width","d","fill","ShuffleArray","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","TetradicColourCalculator","hue","saturation","brightness","set","i","colour","color","push","Polygon","x","y","speed","points","timesToDraw","this","p","radius","canUpdate","divisor","angle","stroke","beginShape","a","sx","cos","sy","sin","vertex","endShape","CLOSE","P5SketchWithAudio","sketchRef","useRef","Sketch","canvas","canvasWidth","innerWidth","canvasHeight","innerHeight","audioLoaded","player","PPQ","cueSet3Length","loadMidi","Midi","fromUrl","midi","then","result","noteSet1","tracks","notes","noteSet2","noteSet3","scheduleCueSet","document","getElementById","classList","add","remove","preload","song","loadSound","audio","onended","logCredits","noteSet","callbackName","poly","lastTicks","currentCue","note","ticks","time","addCue","polygons","polygonPoints","numberOfSides","baseColour","shapeColours","graphicsBG","setup","createCanvas","backgroundCanvas","createGraphics","colorMode","HSB","angleMode","DEGREES","background","noFill","strokeWeight","draw","isPlaying","image","polygon","update","j","executeCueSet1","possibleSides","splice","indexOf","clear","xPoints","yPoints","lowX","highX","lowY","highY","point","executeCueSet2","executeCueSet3","glowColour","levels","cueFromPhraseStart","polygonPointer","currentPolygon","drawingContext","shadowBlur","shadowColor","hex","mousePressed","pause","parseInt","currentTime","buffer","duration","reset","addClass","play","creditsLogged","console","log","stop","updateCanvasDimensions","resizeCanvas","attachEvent","addEventListener","useEffect","current","ref","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0b6ce8e4.chunk.js","sourcesContent":["// p5.sound doesn't work correctly when p5 is not available in the global name space so we add it here\n// https://github.com/processing/p5.js-sound/issues/512\nimport * as p5 from \"p5\";\nwindow.p5 = p5;\n","export default function PlayIcon() {\n    return (\n        <svg id=\"play-icon\" className='fade-out' xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n        </svg>\n    )\n}\n","function ShuffleArray(array) {\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex !== 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nexport default ShuffleArray;\n","function TetradicColourCalculator(p5, hue, saturation = 100, brightness = 100) {\n    let set = [];\n    let i = 0;\n    while(i < 4){\n        hue = hue + i * 90;\n        hue = hue < 360 ? hue : hue - 360;\n        const colour = p5.color(\n          hue,\n          saturation,\n          brightness,\n          1\n        );\n        set.push(colour);\n        i++;\n    }\n\n\n  return set;\n}\n\nexport default TetradicColourCalculator;","export default class Polygon {\n    constructor(p5, x, y, colour, speed, points = 6, timesToDraw = 2) {\n        this.p = p5;\n        this.x = x;\n        this.y = y;\n        this.colour = colour;\n        this.speed = speed;\n        this.points = points;\n        this.timesToDraw = timesToDraw;\n        this.radius = 1;\n        this.canUpdate = true;\n    }\n\n    update(){\n        if(this.radius < this.p.width && this.canUpdate){\n            this.radius = this.radius + this.speed;\n        }\n    }\n\n    draw(divisor) {\n        const angle = 360 / this.points;\n        this.p.stroke(this.colour);\n        this.p.beginShape();\n        for (let a = 0; a < 360; a += angle) {\n            let sx = this.x + this.p.cos(a) * this.radius / divisor;\n            let sy = this.y + this.p.sin(a) * this.radius / divisor;\n            this.p.vertex(sx, sy);\n        }\n        this.p.endShape(this.p.CLOSE);\n    }\n}\n","export default __webpack_public_path__ + \"static/media/polygons-no-1.06e72e83.ogg\";","export default __webpack_public_path__ + \"static/media/polygons-no-1.45da05e1.mid\";","import React, { useRef, useEffect } from \"react\";\nimport \"./helpers/Globals\";\nimport \"p5/lib/addons/p5.sound\";\nimport * as p5 from \"p5\";\nimport { Midi } from '@tonejs/midi'\nimport PlayIcon from './functions/PlayIcon.js';\nimport ShuffleArray from './functions/ShuffleArray.js';\nimport TetradicColourCalculator from './functions/TetradicColourCalculator.js';\nimport Polygon from \"./classes/Polygon\";\n\nimport audio from \"../audio/polygons-no-1.ogg\";\nimport midi from \"../audio/polygons-no-1.mid\";\n\nconst P5SketchWithAudio = () => {\n    const sketchRef = useRef();\n\n    const Sketch = p => {\n\n        p.canvas = null;\n\n        p.canvasWidth = window.innerWidth;\n\n        p.canvasHeight = window.innerHeight;\n\n        p.audioLoaded = false;\n\n        p.player = null;\n\n        p.PPQ = 3840 * 4;\n\n        p.cueSet3Length = 0;\n\n        p.loadMidi = () => {\n            Midi.fromUrl(midi).then(\n                function(result) {\n                    const noteSet1 = result.tracks[2].notes; // Sampler 1 - LeadSynthBass\n                    const noteSet2 = result.tracks[3].notes; // Synth 1 - Elpiano\n                    const noteSet3 = result.tracks[4].notes; // Synth 1 Copy - Gorgonzola\n                    p.cueSet3Length = noteSet3.length;\n                    p.scheduleCueSet(noteSet1, 'executeCueSet1');\n                    p.scheduleCueSet(noteSet2, 'executeCueSet2');\n                    p.scheduleCueSet(noteSet3, 'executeCueSet3');\n                    p.audioLoaded = true;\n                    document.getElementById(\"loader\").classList.add(\"loading--complete\");\n                    document.getElementById(\"play-icon\").classList.remove(\"fade-out\");\n                }\n            );\n            \n        }\n\n        p.preload = () => {\n            p.song = p.loadSound(audio, p.loadMidi);\n            p.song.onended(p.logCredits);\n        }\n\n        p.scheduleCueSet = (noteSet, callbackName, poly = false)  => {\n            let lastTicks = -1,\n                currentCue = 1;\n            for (let i = 0; i < noteSet.length; i++) {\n                const note = noteSet[i],\n                    { ticks, time } = note;\n                if(ticks !== lastTicks || poly){\n                    note.currentCue = currentCue;\n                    p.song.addCue(time, p[callbackName], note);\n                    lastTicks = ticks;\n                    currentCue++;\n                }\n            }\n        } \n\n        p.polygons = [];\n\n        p.polygonPoints = [];\n\n        p.numberOfSides = 6;\n\n        p.baseColour = null;\n\n        p.shapeColours = [];\n\n        p.graphicsBG = false;\n\n        p.setup = () => {\n            p.canvas = p.createCanvas(p.canvasWidth, p.canvasHeight);\n            p.backgroundCanvas = p.createGraphics(p.canvasWidth, p.canvasWidth);\n            p.colorMode(p.HSB);\n            p.angleMode(p.DEGREES);\n            p.background(0);\n            p.noFill();\n            p.strokeWeight(4);\n            p.baseColour = p.color(0, 100, 0, 0.2);\n        }\n\n        p.draw = () => {\n            \n            if(p.audioLoaded && p.song.isPlaying()){\n                if(p.graphicsBG){\n                    p.backgroundCanvas.background(p.baseColour);\n                    p.image(p.backgroundCanvas, 0, 0);\n                }\n                else {\n                    p.background(p.baseColour);\n                }\n                for (let i=0; i <p.polygons.length; i++){\n                    const polygon = p.polygons[i],\n                        { timesToDraw } = polygon;\n                    polygon.update();\n                    let divisor = 1;\n                    for (let j = 0; j < timesToDraw; j++) {\n                        polygon.draw(divisor);\n                        divisor = divisor * 2;\n                    }\n                }\n            }\n        }\n\n        p.executeCueSet1 = (note) => {\n            const { currentCue } = note;\n            if(currentCue % 10 === 1){\n                const possibleSides = [3, 4, 5, 6, 8, 12];\n                possibleSides.splice([3, 4, 5, 6, 8, 12].indexOf(p.numberOfSides), 1)\n                p.clear();\n                p.polygons = [];\n                p.polygonPoints = [];\n                p.numberOfSides = p.random(possibleSides);\n                p.shapeColours = TetradicColourCalculator(\n                    p,\n                    p.random(0, 360),\n                    p.random(50, 100),\n                    p.random(50, 100),\n                );\n\n                let xPoints = [],\n                    yPoints = [];\n\n                for (let i = 0; i < 10; i++) {\n                    const lowX = (p.width / 20) + (p.width / 10) * i,\n                        highX = (p.width / 20) + (p.width / 10) * i + 1,\n                        lowY = (p.height / 20) + (p.height / 10) * i,\n                        highY = (p.height / 20) + (p.height / 10) * i + 1;\n                    xPoints[i] = p.random(lowX, highX); \n                    yPoints[i] = p.random(lowY, highY); \n                }\n\n                xPoints = ShuffleArray(xPoints);\n                yPoints = ShuffleArray(yPoints);\n                for (let i = 0; i < 10; i++) {\n                    p.polygonPoints.push(\n                        {\n                            x: xPoints[i],\n                            y: yPoints[i],\n                        }\n                    );\n                }\n            }\n\n            const point = p.polygonPoints[currentCue % 10],\n                speed = currentCue % 10 ? 1 + (currentCue % 10 / 8) : 10,\n                colour = p.shapeColours.length\n                    ? p.random(p.shapeColours)\n                    : p.color(\n                        p.random(0, 360),\n                        p.random(50, 100),\n                        p.random(50, 100)\n                    );\n            p.polygons.push(\n                new Polygon(\n                    p, \n                    point.x,\n                    point.y,\n                    colour,\n                    speed,\n                    p.numberOfSides,\n                )\n            );\n        }\n\n        p.executeCueSet2 = (note) => {\n            const { currentCue } = note;\n            if(currentCue % 10 === 1){\n                p.baseColour = p.color(\n                    p.random(0, 360), \n                    100, \n                    25, \n                    0.2\n                );\n            }\n        }\n\n        p.executeCueSet3 = (note) => {\n            const { currentCue } = note,\n                glowColour = p.random(p.shapeColours).levels;\n            \n            if(currentCue > 5){\n                const cueFromPhraseStart = currentCue - 5,\n                polygonPointer = cueFromPhraseStart % 10 ? cueFromPhraseStart % 10 - 1 : p.polygons.length - 1,\n                currentPolygon = p.polygons[polygonPointer];\n                currentPolygon.timesToDraw = p.random([2,3,5]);\n                currentPolygon.points = p.random([3, 4, 5, 6, 7, 8, 12]);\n            }\n\n            if(currentCue > 25){\n                p.baseColour = p.color(0, 100, 0, 0.2);\n            }\n            //glow\n            p.graphicsBG = true;\n            p.drawingContext.shadowBlur = 32;\n            p.drawingContext.shadowColor =  \"#\" + p.hex(glowColour[0],2) + p.hex(glowColour[1],2) + p.hex(glowColour[2],2);\n\n            if(p.cueSet3Length === currentCue) {\n                for (let i=0; i <p.polygons.length; i++){\n                    const polygon = p.polygons[i];\n                    polygon.canUpdate = false;\n                }\n            }\n        }\n    \n        p.mousePressed = () => {\n            if(p.audioLoaded){\n                if (p.song.isPlaying()) {\n                    p.song.pause();\n                } else {\n                    if (parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)) {\n                        p.reset();\n                    }\n                    document.getElementById(\"play-icon\").classList.add(\"fade-out\");\n                    p.canvas.addClass(\"fade-in\");\n                    p.song.play();\n                }\n            }\n        }\n\n        p.creditsLogged = false;\n\n        p.logCredits = () => {\n            if (\n                !p.creditsLogged &&\n                parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)\n            ) {\n                p.creditsLogged = true;\n                    console.log(\n                    \"Music By: http://labcat.nz/\",\n                    \"\\n\",\n                    \"Animation By: https://github.com/LABCAT/\"\n                );\n                p.song.stop();\n            }\n        };\n\n        p.reset = () => {\n\n        }\n\n        p.updateCanvasDimensions = () => {\n            p.canvasWidth = window.innerWidth;\n            p.canvasHeight = window.innerHeight;\n            p.canvas = p.resizeCanvas(p.canvasWidth, p.canvasHeight);\n        }\n\n        if (window.attachEvent) {\n            window.attachEvent(\n                'onresize',\n                function () {\n                    p.updateCanvasDimensions();\n                }\n            );\n        }\n        else if (window.addEventListener) {\n            window.addEventListener(\n                'resize',\n                function () {\n                    p.updateCanvasDimensions();\n                },\n                true\n            );\n        }\n        else {\n            //The browser does not support Javascript event binding\n        }\n    };\n\n    useEffect(() => {\n        new p5(Sketch, sketchRef.current);\n    }, []);\n\n    return (\n        <div ref={sketchRef}>\n            <PlayIcon />\n        </div>\n    );\n};\n\nexport default P5SketchWithAudio;\n","import P5SketchWithAudio from './P5SketchWithAudio'\n\nfunction App() {\n  return (\n    <P5SketchWithAudio/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/build.css';\nimport App from './js/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}